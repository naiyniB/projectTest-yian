name: Process Public Archive

on:
  push:
    branches:
      - main  # 改成你的分支名，如 master
    paths:
      - 'public/**'

jobs:
  process-archive:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Find New Archive in public/
        id: find_archive
        run: |
          # 获取本次提交中 public/ 下的压缩包（排除特定路径）
          CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r HEAD | grep "^public/" | grep -E "\.(zip|tar\.gz|tgz|tar)$" | grep -v "^public/\.\(github\|xxx\)/")

          if [ -z "$CHANGED_FILES" ]; then
            echo "No archive file found in public/"
            exit 0
          fi

          # 取最后一个（最新）的压缩包
          LATEST_ARCHIVE=$(echo "$CHANGED_FILES" | tail -n 1)
          echo "archive_path=$LATEST_ARCHIVE" >> $GITHUB_OUTPUT
          echo "Found: $LATEST_ARCHIVE"
        shell: bash

      - name: Extract and Replace Root
        if: steps.find_archive.outputs.archive_path != ''
        run: |
          ARCHIVE="./${{ steps.find_archive.outputs.archive_path }}"

          if [ ! -f "$ARCHIVE" ]; then
            echo "Archive not found: $ARCHIVE"
            exit 1
          fi

          # 要保留的目录（不删除）
          KEEP_DIRS=( ".github" "public" "xxx" )  # 添加你需要保留的文件夹

          # 删除根目录下其他所有文件和文件夹
          for item in ./*; do
            [ -e "$item" ] || continue
            ITEM_NAME="${item#./}"
            should_keep=false
            for keep in "${KEEP_DIRS[@]}"; do
              if [ "$ITEM_NAME" = "$keep" ]; then
                should_keep=true
                break
              fi
            done
            if [ "$should_keep" = false ]; then
              rm -rf "$item"
            fi
          done

          # 创建临时解压目录
          TMP_UNZIP="./tmp_unzip"
          mkdir -p "$TMP_UNZIP"

          # 根据类型解压
          case "$ARCHIVE" in
            *.zip)
              unzip -q "$ARCHIVE" -d "$TMP_UNZIP"
              ;;
            *.tar.gz|*.tgz)
              tar -xzf "$ARCHIVE" -C "$TMP_UNZIP"
              ;;
            *.tar)
              tar -xf "$ARCHIVE" -C "$TMP_UNZIP"
              ;;
            *)
              echo "Unsupported format: $ARCHIVE"
              exit 1
              ;;
          esac

          # 移动解压内容到根目录
          mv "$TMP_UNZIP"/* ./
          mv "$TMP_UNZIP"/.* ./ 2>/dev/null || true  # 忽略 . 或 .. 错误
          rm -rf "$TMP_UNZIP"

          echo "Successfully extracted and replaced root."

      - name: Clean Public Directory
        run: |
          # 清空 public/，保留 .gitkeep（如果存在）
          find public -mindepth 1 ! -name '.gitkeep' -exec rm -rf {} + 2>/dev/null || true

      - name: Commit and Push Changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add -A
          if ! git diff-index --quiet HEAD --; then
            git commit -m "feat: update root from latest archive in public"
            git push
          else
            echo "No changes to commit."
          fi
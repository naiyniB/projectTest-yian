name: Unpack and Overwrite Root (Preserve .github)

on:
  push:
    branches:
      - main  # 根据你的默认分支修改，如 main 或 master
    paths:
      - 'public/**'  # 只要 public 下有变更就触发

jobs:
  unpack-and-overwrite:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 允许提交

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Find Compressed Files in public/
        id: find_archives
        run: |
          echo "Checking for archives in public/..."
          find public -type f \( -name "*.zip" -o -name "*.tar.gz" -o -name "*.tgz" -o -name "*.gz" \) -print > /tmp/archives.txt
          if [ -s /tmp/archives.txt ]; then
            echo "has_archive=true" >> $GITHUB_OUTPUT
            cat /tmp/archives.txt
          else
            echo "No archives found."
            echo "has_archive=false" >> $GITHUB_OUTPUT
          fi

      - name: Extract to Temporary Directory
        if: steps.find_archives.outputs.has_archive == 'true'
        run: |
          mkdir -p /tmp/extracted
          while IFS= read -r archive; do
            echo "Processing archive: $archive"
            case "$archive" in
              *.zip)
                unzip -q "$archive" -d /tmp/extracted
                ;;
              *.tar.gz|*.tgz)
                tar -xzf "$archive" -C /tmp/extracted
                ;;
              *.gz)
                # 假设是单个文件 .gz
                cp "$archive" /tmp/temp.gz
                gunzip -f /tmp/temp.gz
                mv "/tmp/temp" "/tmp/extracted/$(basename "${archive%.gz}")"
                ;;
              *)
                echo "Unsupported format: $archive"
                ;;
            esac
          done < /tmp/archives.txt

          # 检查是否提取出内容
          if [ ! -d /tmp/extracted ] || [ -z "$(ls -A /tmp/extracted)" ]; then
            echo "⚠️ No files extracted. Skipping overwrite."
            exit 0
          fi

      - name: Overwrite Root Directory (Preserve .github)
        if: steps.find_archives.outputs.has_archive == 'true'
        run: |
          echo "Overwriting root directory, preserving ./.github ..."

          # 删除根目录下所有内容，除了 .github 和临时脚本忽略项
          find . -mindepth 1 \( \
            -name '.github' -o \
            -name 'public' -o \
            -name '.git' \) \
            -prune -o -exec rm -rf {} +

          # 移动解压内容到根目录
          shopt -s dotglob nullglob
          mv /tmp/extracted/* ./ 2>/dev/null || echo "No files to move"
          shopt -u dotglob

          echo "✅ Root has been overwritten (except ./.github)."

      - name: Commit and Push Changes
        if: steps.find_archives.outputs.has_archive == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # 添加所有变更（新增、删除、修改）
          git add -A

          git status  # 查看当前状态

          # 提交更改
          git commit -m "chore: overwrite root from archive in public/" || echo "No changes to commit"
          git push origin ${{ github.ref }}
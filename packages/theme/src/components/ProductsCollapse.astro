---
import { type TProductCategory } from "@rxdrag/website-lib-core";
import { ProductCategoryQueryOptions, ProductCategoryFields, ProductFields, ProductQueryOptions, PublishableStatus } from "@rxdrag/rxcms-models";
import { rx } from "../lib";
import { Collapse, CollapseTrigger, Motion, CollapsePanel } from "@rxdrag/website-lib";
import MobileProductCategory from "./MobileProductCategory.astro";

interface Props {
  title?: string;
  class?: string;
}
const { title = "Products", class: className } = Astro.props;
const categories = (
  await rx.queryEntityList(
    new ProductCategoryQueryOptions(
      [
        ProductCategoryFields.id,
        ProductCategoryFields.name,
        ProductCategoryFields.slug,
      ],
      {
        where: {
          lang: {
            abbr: {
              _eq: rx.getLang(),
            },
          },
        },
        orderBy: [{ seqValue: "asc" }],
      }
    ).products(
      new ProductQueryOptions(
        [
          ProductFields.id,
          ProductFields.slug,
          ProductFields.title,
          ProductFields.shortTitle,
        ],
        {
          where: {
            showInNavMenu: { _eq: true },
            status: { _eq: PublishableStatus.published },
          },
          orderBy: [{ seqValue: "asc" }],
        }
      )
    ),
    "categories-in-nav"
  )
)?.items as TProductCategory[] | undefined;---

<Collapse class="flex flex-col relative">
  <CollapseTrigger class:list={["flex items-center gap-x-1", className]}>
    {title}
    <Motion
      as="span"
      class="h-5 w-5 flex-none text-foreground"
      id="products-arrow"
      whileOpenable={{ open: { rotate: 180 }, close: { rotate: 0 } }}
    >
      <svg
        aria-hidden="true"
        fill="currentColor"
        focusable="false"
        height="1.25rem"
        viewBox="0 0 24 24"
        width="1.25rem"
      >
        <path d="M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6z"></path>
      </svg>
    </Motion>
  </CollapseTrigger>
  <CollapsePanel
    class:list={["light", "box-border", "h-0 opacity-1 overflow-hidden"]}
    whileOpenable={{
      initial: {
        height: 0,
      },
      open: {
        to: {
          height: "auto",
        },
        duration: 0.6,
        ease: "power3.out",
      },
      close: {
        to: {
          height: 0,
        },
        duration: 0.25,
        ease: "power2.in",
      },
    }}
  >
    {
      categories?.map((category) => (
        <MobileProductCategory category={category} />
      ))
    }
  </CollapsePanel>
</Collapse>
